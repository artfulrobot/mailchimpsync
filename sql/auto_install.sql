-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--


-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from drop.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the exisiting tables
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `civicrm_mailchimpsync_update`;
DROP TABLE IF EXISTS `civicrm_mailchimpsync_cache`;
DROP TABLE IF EXISTS `civicrm_mailchimpsync_batch`;

SET FOREIGN_KEY_CHECKS=1;
-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * civicrm_mailchimpsync_batch
-- *
-- * Holds details about Mailchimp Batches - basically a cache
-- *
-- *******************************************************/
CREATE TABLE `civicrm_mailchimpsync_batch` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'Unique MailchimpsyncBatch ID',
     `mailchimp_list_id` varchar(32)    COMMENT 'We batch per list/audience',
     `mailchimp_batch_id` varchar(32)    COMMENT 'Mailchimp-supplied Batch ID',
     `status` varchar(32)    COMMENT 'Mailchimp-supplied status',
     `submitted_at` datetime    ,
     `completed_at` datetime    COMMENT 'Mailchimp-supplied date of completion',
     `finished_operations` int   DEFAULT 0 ,
     `errored_operations` int   DEFAULT 0 ,
     `total_operations` int   DEFAULT 0 ,
     `response_processed` int   DEFAULT 0 COMMENT 'Set to 1 when processing, 2 when processed' 
,
        PRIMARY KEY (`id`)
 
 
 
)    ;

-- /*******************************************************
-- *
-- * civicrm_mailchimpsync_cache
-- *
-- * Holds copies of data from Mailchimp and CiviCRM that assist with keeping both in sync.
-- *
-- *******************************************************/
CREATE TABLE `civicrm_mailchimpsync_cache` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'Unique MailchimpsyncCache ID',
     `mailchimp_list_id` varchar(32) NOT NULL   ,
     `mailchimp_member_id` char(32)    COMMENT 'Theoretically redundant md5 of lower case email but Mailchimp has bugs',
     `mailchimp_email` varchar(255)    ,
     `mailchimp_status` varchar(20)    COMMENT 'subscribed|unsubscribed|cleaned|pending|transactional|archived',
     `mailchimp_updated` datetime    COMMENT 'From API\'s last_changed field',
     `mailchimp_data` blob    COMMENT 'PHP serialized data',
     `civicrm_data` blob    COMMENT 'PHP serialized data',
     `civicrm_groups` text    COMMENT 'Snapshot info about groups the contact has been added/removed since certain date, used by sync',
     `civicrm_contact_id` int unsigned    COMMENT 'FK to Contact',
     `sync_status` varchar(10)   DEFAULT 'todo' COMMENT 'ok|todo|redo|fail' 
,
        PRIMARY KEY (`id`)
 
    ,     INDEX `index_list_id_sync_status`(
        mailchimp_list_id
      , sync_status
  )
  
,          CONSTRAINT FK_civicrm_mailchimpsync_cache_civicrm_contact_id FOREIGN KEY (`civicrm_contact_id`) REFERENCES `civicrm_contact`(`id`) ON DELETE CASCADE  
)    ;

-- /*******************************************************
-- *
-- * civicrm_mailchimpsync_update
-- *
-- * This table keeps a copy of all updates sent or to be sent to Mailchimp.
-- *
-- *******************************************************/
CREATE TABLE `civicrm_mailchimpsync_update` (


     `id` int unsigned NOT NULL AUTO_INCREMENT  COMMENT 'Unique MailchimpsyncUpdate ID',
     `mailchimpsync_cache_id` int unsigned    COMMENT 'FK to MailchimpsyncCache ID',
     `mailchimpsync_batch_id` int unsigned    COMMENT 'FK to Mailchimpsync Batch',
     `data` TEXT NOT NULL   ,
     `completed` tinyint NOT NULL  DEFAULT 0 ,
     `error_response` TEXT    COMMENT 'Set if the mailchimp update fails to whatever mailchimp returned.' 
,
        PRIMARY KEY (`id`)
 
 
,          CONSTRAINT FK_civicrm_mailchimpsync_update_mailchimpsync_cache_id FOREIGN KEY (`mailchimpsync_cache_id`) REFERENCES `civicrm_mailchimpsync_cache`(`id`) ON DELETE CASCADE,          CONSTRAINT FK_civicrm_mailchimpsync_update_mailchimpsync_batch_id FOREIGN KEY (`mailchimpsync_batch_id`) REFERENCES `civicrm_mailchimpsync_batch`(`id`) ON DELETE CASCADE  
)    ;

 
